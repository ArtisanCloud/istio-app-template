{{- $root := . -}}
{{- $fullName := include "istio-app.fullname" . -}}
{{- range $i, $item := .Values.app }}
{{- with $root }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "istio-app.fullname" . }}-{{ $item.version }}
  labels:
    version: {{ $item.version }}
    {{- include "istio-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      version: {{ $item.version }}
      {{- include "istio-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        version: {{ $item.version }}
        {{- include "istio-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "istio-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $item.image }}:{{ $item.version | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if $item.env }}
          env:
            {{- toYaml $item.env | nindent 12 }}
          {{- end }}
          {{- if .Values.healthCheck.enable }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if $item.mount }}
          volumeMounts:
            {{- range $i, $v := $item.mount }}
            - name: {{ $v.name }} # 使用的volumes.name
              mountPath: {{ $v.target }} # 映射到容器里面的目录
            {{- end }}
          {{- end }}

      {{- if .Values.configMaps }}
      {{- range $i, $item := .Values.configMaps }}
      volumes:
        - name: {{ $item.name }} # 
          configMap:
            name: {{ $fullName }}-{{ $item.name }}
      {{- end }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}

